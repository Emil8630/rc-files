#
# ~/.bashrc
#

alias nano="nvim"
alias vim="nvim"
alias py="python"
alias r="ranger"
alias music="cava"
alias clear="clear && source ~/.bashrc"
alias cl="clear"
alias clock="tty-clock"
alias gc="git clone"
alias cheatsheet="python ~/cheatsheet.py"
alias cs="cheatsheet"
alias grep="batgrep"
alias man="batman"
#alias =""
#alias =""
#alias =""
#alias =""




# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1='[\u@\h \W]\$ '

#export PS1="\[\e[33m\][\[\e[m\]\[\e[31m\]\u\[\e[m\]\[\e[31m\]@\[\e[m\]\[\e[31m\]\h\[\e[m\]\[\e[33m\]]\[\e[m\] \[\e[33m\][\[\e[m\]\[\e[36m\]\w\[\e[m\]\[\e[33m\]]\[\e[m\] \[\e[34m\]\\$\[\e[m\] "
# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

export PS1="\[\e[31m\][\[\e[m\]\[\e[34m\]\w\[\e[m\]\[\e[31m\]]\[\e[m\] \[\e[33m\]\`parse_git_branch\`\[\e[m\]\[\e[33m\]›\[\e[m\] "

## DWM
alias bwcleanbuild="sudo rm -r  /opt/dwm-source/config.h /opt/dwm-source/drw.o /opt/dwm-source/dwm /opt/dwm-source/dwm.o /opt/dwm-source/util.o && cd ~/bw-dwm/archcraft-dwm/source && sudo make clean install && cd ~/bw-dwm/archcraft-dwm/ && makepkg -if --cleanbuild"
alias gruvcleanbuild="sudo rm -r  /opt/dwm-source/config.h /opt/dwm-source/drw.o /opt/dwm-source/dwm /opt/dwm-source/dwm.o /opt/dwm-source/util.o && cd ~/gruv-dwm/archcraft-dwm/source && sudo make clean install && cd ~/gruv-dwm/archcraft-dwm/ && makepkg -if --cleanbuild"


### PATH
if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/Applications" ] ;
  then PATH="$HOME/Applications:$PATH"
fi

### SETTING OTHER ENVIRONMENT VARIABLES
if [ -z "$XDG_CONFIG_HOME" ] ; then
    export XDG_CONFIG_HOME="$HOME/.config"
fi
if [ -z "$XDG_DATA_HOME" ] ; then
    export XDG_DATA_HOME="$HOME/.local/share"
fi
if [ -z "$XDG_CACHE_HOME" ] ; then
    export XDG_CACHE_HOME="$HOME/.cache"
fi
export XMONAD_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/xmonad" # xmonad.hs is expected to stay here
export XMONAD_DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/xmonad"
export XMONAD_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/xmonad"

### CHANGE TITLE OF TERMINALS
case ${TERM} in
  xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|alacritty|st|konsole*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
        ;;
  screen*)
    PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
    ;;
esac

# Alias
alias editalias="nano ~/.bashrc"
alias applyalias="source ~/.bashrc"
alias cd..="cd .."
#alias list="exa -lah --color=always --group-directories-first --icons"
#alias ls="list"
alias ls="exa -lah --color=always --group-directories-first --icons"
alias cat="bat" 
alias file="ranger" 
alias files="ranger" 
alias grep="ripgrep" 
alias vmhelp="echo Starta && echo virsh start VM-NAMN && echo Stoppa && echo virsh shutdown VM-NAMN && echo Lista && echo virsh list --all && echo Öppna skärm && echo virt-viewer VM-NAMN && echo && echo virt-install --name=VALFRITT-NAMN \ && echo --vcpus=1 \ && echo --memory=1024 \ && echo --cdrom=/home/whoami/Downloads/Distros/Win11.iso \ && echo --disk size=5 \ && echo --os-variant=win11" 
alias rr="curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash"

# Changing "ls" to "exa"
#alias ls='exa -lah --color=always --group-directories-first' # my preferred listing
alias la='exa -a --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first'  # long format
alias lt='exa -aT --color=always --group-directories-first' # tree listing

### "bat" as manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# pacman and yay
alias pacman="sudo pacman"
alias pacsyu='sudo pacman -Syu'                  # update only standard pkgs
alias pacsyyu='sudo pacman -Syyu'                # Refresh pkglist & update standard pkgs
alias yaysua='yay -Sua --noconfirm'              # update only AUR pkgs (yay)
alias yaysyu='yay -Syu --noconfirm'              # update standard pkgs and AUR pkgs (yay)
alias parsua='paru -Sua --noconfirm'             # update only AUR pkgs (paru)
alias parsyu='paru -Syu --noconfirm'             # update standard pkgs and AUR pkgs (paru)
alias unlock='sudo rm /var/lib/pacman/db.lck'    # remove pacman lock
alias cleanup='sudo pacman -Rns $(pacman -Qtdq)' # remove orphaned packages

# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

# Play audio files in current dir by type
alias playwav='deadbeef *.wav'
alias playogg='deadbeef *.ogg'
alias playmp3='deadbeef *.mp3'

# Play video files in current dir by type
alias playavi='mpv *.avi'
alias playmov='mpv *.mov'
alias playmp4='mpv *.mp4'

# git
alias addup='git add -u'
alias addall='git add .'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status'  # 'status' is protected name so using 'stat' instead
alias tag='git tag'
alias newtag='git tag -a'

# Confirms
alias mv="mv -i"
alias cp="cp -i"
alias rm="rm -i"
alias ln="ln -i"

# Log Deletion
#alias exit="sudo shred -vfzu /var/log/boot.log && sudo shred -vfzu /var/log/pacman.log && sudo shred -vfzu /var/log/Xorg.0.log && sudo shred -vfzu /home/whoami/.zsh_history && sudo shred -vfzu /var/log/mullvad-vpn/daemon.log && clear && echo GoodBye! && exit"
alias exit="cd -s /var/log && sudo shred -vfzu boot.log pacman.log Xorg.0.log Xorg.0.log.old && cd -s /home/less && sudo shred -vfzu .zsh_history && sudo shred -vfzu /var/log/mullvad-vpn/daemon.log && clear && echo System wipedown complete! && exit"
alias wipe="sudo shred -vfzu /var/log/boot.log && sudo shred -vfzu /var/log/pacman.log && sudo shred -vfzu /var/log/Xorg.0.log && sudo shred -vfzu /home/whoami/.zsh_history && sudo shred -vfzu /var/log/mullvad-vpn/daemon.log && clear && echo System wipedown complete!"


#ignore upper and lowercase when TAB completion
#bind "set completion-ignore-case on"

### ARCHIVE EXTRACTION
# usage: ex <file>
ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

### CD NAVIGATION
up () {
  local d=""
  local limit="$1"

  if [ -z "$limit" ] || [ "$limit" -le 0 ]; then
    limit=1
  fi

  for ((i=1;i<=limit;i++)); do
    d="../$d"
  done

  if ! cd "$d"; then
    echo "Det funkade inte att gå upp $limit ditt retard.";
  fi
}


alias ls="exa -lah --color=always --group-directories-first --icons"
#pfetch
python ~/pfetch.py
export PATH=$PATH:/home/less/.spicetify
export PS1='\[\033[38;5;9m\][\[\033[38;5;11m\]\u\[\033[38;5;10m\]@\[\033[38;5;12m\]\h\[\033[38;5;1m\] \[\033[38;5;13m\]\w\[\033[38;5;9m\]]\[\033[m\]$ '

